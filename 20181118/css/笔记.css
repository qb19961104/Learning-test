数组的末尾添加项：
arr=[arr.length]={100}

检测数组:
console.log(Array.isArray(arr));

for...in 用于遍历关联数组(下标可以任意定义的数组)
in 前面是变量，后面是numbers

join(seperator)返回一个字符串，由每个元素转换而成的字符串使用指定的seperator拼接而成。
valueOf()方法返回数组的元素字符创
toString()方法可以把数组转换为字符创，并返回结果
tolocaleString()返回数组中每个元素本地化表示形式
var number=[2123,'hello',new Date()];
document.write(numbers+"<br>");
document.write(numbers.valueOf()+"<br>");
document.write(numbers.toString()+"<br>");
document.write(numbers.tolocaleString()+"<br>");
document.write(numbers.join("-")+"<br>");


concat 拼接两个或更多的数值，并返回结果
1.不会改变现有的数组，仅返回一个拼接后的副本。
2.每个参数可以是一个数组，也可以是一个值。
3.可以拼接任意多个数值。

slice()返回现有数组的一个字数组，含头不含尾
参数start 指定从哪各下标开始获取;若取值为负值，则表示从尾部开始算起，如-1只最后一个元素，-2指倒数第二个元素
参数end 指定结束处的下(不包含)；可以省略或取负值

splice()从数组中删除一部分元素，并添加另一部分元素
语法：arrObject.splice(start,count,e1,e2);
参数start：指定添加/删除的起始位置，可取负值
参数count： 要删除的元素个数，0表示不可删除
e1，e2在start处新添加的项
返回被删除的项目：现有数组内容会改变;

reverse()颠倒数组中元素的顺序
语法：arrObject.reverse()
现有数组内容会改变

sort() 用于对数组中的元素由大到小进行排序
语法：arrObject.sort(sortby)
若未指定参数，则按元素得Unicode码排序；也可以指定元素比较函数sortby，按其返回的正负值作排序的依据
现有数组内容会改变

栈是一种LIFO(Last-In-First-Out,后进先出)的数据结构

push()入栈，在栈顶添加指定的元素，并返回新的长度
var arr1=[10,20];
len =arr1.push(30);
len =arr1.push(40,50);
console.log(arr1);
console.log(arr2);

pop()出栈，删除并返回栈顶的元素

var top=arr.pop();
top=arr1.pop();
top=arr1.pop();
onsole.log(arr1);

队列方法：队列数据结构的访问原则是FIFO(First-In-First-Out,先进先出)
shit():移除数组中的第一个项，并返回该项
unshit():在数组的前端添加任意多个项，并返回数组的长度
 
交换a与b的值：
  var a=1;
  var b=2;
  a=[b,b=a][0];
  console.log(a);
  console.log(b);


ES6 交换a与b的值：
  var a=1;
  var b=2;
   [a,b]=[b,a];
  console.log(a);
  console.log(b);